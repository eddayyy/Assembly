     1                                  ; Author: Eduardo Nunez
     2                                  ; Author email: eduardonunez@csu.fullerton.edu
     3                                  ; Program: Pure Assembly In 2022
     4                                  ; File: main.asm, asm
     5                                  ; Requirements: 
     6                                  ; 1) welcome msg, 2) time in tics, 3) inputs a float in degrees
     7                                  ; outputs same # for confirmation, 4) converts degree # to radian
     8                                  ; computes cosine of the radian, 5) shows # of tics, 6) says goodbye 
     9                                  
    10                                  global _start
    11                                  section .data
    12 00000000 57656C636F6D652074-         welcomePhrase db "Welcome to the Accurate Cosines by EN", 10, 0 
    12 00000009 6F2074686520416363-
    12 00000012 757261746520436F73-
    12 0000001B 696E65732062792045-
    12 00000024 4E0A00             
    13 00000027 5468652074696D6520-         timePhrase db "The time is now ", 0
    13 00000030 6973206E6F772000   
    14 00000038 20746963730A00              timePhrase2 db " tics", 10, 0
    15 0000003F 596F7520656E746572-         enteredPhrase db "You entered ", 0
    15 00000048 65642000           
    16 0000004C 546865206571756976-         equivalentPhrase db "The equivalent radians is ", 0
    16 00000055 616C656E7420726164-
    16 0000005E 69616E732069732000 
    17 00000067 54686520636F73696E-         cosinePhrase db "The cosine of those degrees is ", 0
    17 00000070 65206F662074686F73-
    17 00000079 652064656772656573-
    17 00000082 2069732000         
    18 00000087 5468652074696D6520-         secondsPhrase db "The time is now ", 0 
    18 00000090 6973206E6F772000   
    19 00000098 207365636F6E647300          secondsPhrase2 db " seconds", 0
    20                                  
    21                                  
    22                                  section .bss
    23                                      stdout equ 1
    24                                      sys_write equ 1 
    25                                      welcome equ 39
    26                                      time1 equ 16
    27                                  
    28                                  section .text
    29                                  _start:
    30                                  ;========================= Backing up all 64 bit registers =========================
    31 00000000 55                      push rbp
    32 00000001 4889E5                  mov  rbp,rsp
    33 00000004 57                      push rdi                                                    
    34 00000005 56                      push rsi                                                    
    35 00000006 52                      push rdx                                                   
    36 00000007 51                      push rcx                                                    
    37 00000008 4150                    push r8                                                     
    38 0000000A 4151                    push r9                                                     
    39 0000000C 4152                    push r10                                                    
    40 0000000E 4153                    push r11                                                  
    41 00000010 4154                    push r12                                                   
    42 00000012 4155                    push r13                                                   
    43 00000014 4156                    push r14                                                   
    44 00000016 4157                    push r15                                                    
    45 00000018 53                      push rbx                                                    
    46 00000019 9C                      pushf   
    47                                  
    48                                  ;======================== Printing out the welcome prompt ========================
    49 0000001A B801000000              mov rax, sys_write
    50 0000001F BF01000000              mov rdi, stdout 
    51 00000024 48BE-                   mov rsi, welcomePhrase
    51 00000026 [0000000000000000] 
    52 0000002E BA27000000              mov rdx, welcome 
    53 00000033 0F05                    syscall 
    54                                  ; end block 
    55                                  
    56                                  ;======================== Dumping memory ========================
    57 00000035 B801000000              mov rax, sys_write
    58 0000003A BF01000000              mov rdi, stdout 
    59 0000003F 48BE-                   mov rsi, timePhrase
    59 00000041 [2700000000000000] 
    60 00000049 BA10000000              mov rdx, time1
    61 0000004E 0F05                    syscall
    62                                  ; end block
    63                                  
    64                                  ;========================= Restoring all 64 bit registers for stability and peace among the stack =========================
    65 00000050 9D                      popf                                                        
    66 00000051 5B                      pop rbx                                                    
    67 00000052 415F                    pop r15                                                    
    68 00000054 415E                    pop r14                                                    
    69 00000056 415D                    pop r13                                                   
    70 00000058 415C                    pop r12                                                     
    71 0000005A 415B                    pop r11                                                   
    72 0000005C 415A                    pop r10                                                     
    73 0000005E 4159                    pop r9                                                     
    74 00000060 4158                    pop r8                                                     
    75 00000062 59                      pop rcx                                                     
    76 00000063 5A                      pop rdx                                                   
    77 00000064 5E                      pop rsi                                                    
    78 00000065 5F                      pop rdi                                                     
    79 00000066 5D                      pop rbp                                                     
    80                                  
    81 00000067 C3                      ret
